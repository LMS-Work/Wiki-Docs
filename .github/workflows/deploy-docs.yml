name: 部署文档

on:
  # 添加手动触发选项
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      # 扩展文档相关文件的范围
      - 'src/**'
      - 'docs/**'
      - '.vuepress/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/deploy-docs.yml'

permissions:
  contents: write

jobs:
  deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # 如果你文档需要 Git 子模块，取消注释下一行
          # submodules: true

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8


      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      # 添加 pnpm 缓存
      - name: 获取 pnpm 存储目录
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 设置 pnpm 缓存
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 构建文档
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: |
          pnpm run docs:build
          > src/.vuepress/dist/.nojekyll
        # 添加错误处理
        continue-on-error: false

      - name: 检查构建输出
        run: |
          if [ ! -d "src/.vuepress/dist" ]; then
            echo "构建输出目录不存在！"
            exit 1
          fi

      - name: 部署文档
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 部署文档
          branch: gh-pages
          folder: src/.vuepress/dist
